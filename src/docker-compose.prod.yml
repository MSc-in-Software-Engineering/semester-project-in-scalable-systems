version: "3"

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  namenode:
      image: apache/hadoop:3
      hostname: namenode
      command: ["hdfs", "namenode"]
      ports:
        - 9870:9870
      env_file:
        - ./config
      environment:
          ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"

  datanode:
      image: apache/hadoop:3
      command: ["hdfs", "datanode"]
      env_file:
        - ./config    

  resourcemanager:
      image: apache/hadoop:3
      hostname: resourcemanager
      command: ["yarn", "resourcemanager"]
      ports:
         - 8088:8088
      env_file:
        - ./config
      volumes:
        - ./test.sh:/opt/test.sh

  nodemanager:
      image: apache/hadoop:3
      command: ["yarn", "nodemanager"]
      env_file:
        - ./config
    
  energinet-co2-producer:
    image: ghcr.io/msc-in-software-engineering/energinet_co2_producer:latest
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  energinet-co2-consumer:
    image: ghcr.io/msc-in-software-engineering/energinet_co2_consumer:latest
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  greenhouse-producer:
    image: ghcr.io/msc-in-software-engineering/greenhouse_producer:latest
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  greenhouse-consumer:
    image: ghcr.io/msc-in-software-engineering/greenhouse_consumer:latest
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

volumes:
  kafka_data:
    driver: local
version: "3"

services:
  ### Kafka
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  ### HDFS
  namenode:
    image: apache/hadoop:3
    hostname: namenode
    command: ["hdfs", "namenode"]
    ports:
      - 9870:9870
    env_file:
      - ./hdfs/config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"

  datanode:
    image: apache/hadoop:3
    command: ["hdfs", "datanode"]
    env_file:
      - ./hdfs/config    

  resourcemanager:
    image: apache/hadoop:3
    hostname: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
        - 8088:8088
    env_file:
      - ./hdfs/config
    volumes:
      - ./test.sh:/opt/test.sh

  nodemanager:
    image: apache/hadoop:3
    command: ["yarn", "nodemanager"]
    env_file:
      - ./hdfs/config

  ### Spark
  spark-master:
    image: docker.io/bitnami/spark:3.3
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - KAFKA_BROKER_ADDRESS=kafka:9092
    ports:
      - '8080:8080'

  spark-worker:
    image: docker.io/bitnami/spark:3.3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2GN
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ECRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no

  jupyterlab:
    image: jupyter/all-spark-notebook
    ports:
      - 8888:8888
    volumes:
      - shared-workspace:/opt/workspace
      - ./local/notebooks:/opt/workspace/notebooks
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  ### Producers
  energinet-co2-producer:
    build: 
      context: ./kafka/producers/energinet
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  greenhouse-producer:
    build: 
      context: ./kafka/producers/greenhouse_gas_emissions
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  ### Consumers
  energinet-co2-consumer:
    build: 
      context: ./kafka/consumers/energinet
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka

  greenhouse-consumer:
    build: 
      context: ./kafka/consumers/greenhouse_gas_emissions
      dockerfile: Dockerfile
    environment:
      - KAFKA_BROKER_ADDRESS=kafka
    depends_on:
      - kafka
      
volumes:
  kafka_data:
    driver: local
  shared-workspace:
    driver: local